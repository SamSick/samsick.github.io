{"version":3,"sources":["./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/app/models/model-interfaces.ts","./src/app/posts/posts.component.html","./src/app/posts/posts.component.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/tags/tags.component.ts","./src/app/tags/tags.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Li_Response, Message, User } from '../models/model-interfaces';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\n\n\nconst base_url: string = \"https://community.khoros.com/api/2.0/\";\n//const base_url: string = \"https://developer.community.boschrexroth.com/api/2.0/\";\n//const base_url: string = \"https://community.ebay.de/api/2.0/\";\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\n\nexport class UserComponent implements OnInit {\n  users: User[] = [];\n  all_users!: User[] ;\n  selected_user_array?: User[];\n  selected_user?: User;\n  posts_per_user: Message[] = [];\n  dataSource!: MatTableDataSource<Message>;\n  response!: Li_Response;\n  length = 100;\n  pageSize = 20;\n  index = 0;\n  pageSizeOptions: number[] = [10, 20, 50, 100];\n  inputValue?: string;\n  messages_per_user!: Message[];\n  displayedColumns: string[] = [\"subject\", \"board\", \"posted\", \"replies\", \"solved\", \"link\"];\n  not_found: boolean = false;\n  expandedElement!: Message | null;\n  latest_answer!: Message[];\n  input_search_user!: string;\n  \n  \n  constructor(private http: HttpClient) { \n    \n  }\n\n  ngOnInit(): void {\n    this.http.get<Li_Response>(base_url + \"search?q=SELECT%20login,%20id,%20view_href,%20online_status,%20avatar%20FROM%20users%20LIMIT%20100\").subscribe(res => {\n      this.response = res;\n      this.all_users = this.response.data.items;  \n      this.all_users.sort(function (a, b) {\n        return ('' + a.login).localeCompare(b.login);\n      });\n      this.getPostsSizePerUser();\n      this.requestUser(this.pageSize, this.index);\n    },\n    (error: HttpErrorResponse) => {\n      switch (error.status) {\n        case 403:\n          console.log(\"Kein Zugriff: \" + error);\n      }\n    }\n    );\n  }\n\n  async getPostsSizePerUser(){\n    for (var i=0; i<this.all_users.length; i++){\n      const size_response = await this.http.get<Li_Response>(\"https://community.khoros.com/api/2.0/search?q=SELECT%20count(*)%20FROM%20messages%20WHERE%20author.id='\" + this.all_users[i].id + \"'\").toPromise();\n      this.all_users[i].posts = size_response.data.count;\n    }\n    \n  }\n\n  requestUser (size: number, index:number){\n    this.users = [];\n    var n = 0;\n    for (var i=index*size; i<(index+1)*size; i++){\n      this.users[n] = this.all_users[i];\n      n++;\n    }\n  }\n\n  async searchPostsPerUser() {\n    this.http.get<Li_Response>(base_url + \"search?q=SELECT%20login,%20id%20FROM%20users%20WHERE%20login='\" + this.inputValue + \"'\").subscribe(res => {\n      this.response = res;\n        if (this.response.http_code === 200){\n          this.selected_user_array = this.response.data.items;\n          if (this.selected_user_array.length > 0){\n            this.selected_user = this.selected_user_array[0];\n            this.not_found = false;\n          } else {\n            this.not_found = true;\n          }\n        } else {\n          this.selected_user_array = [];\n          this.selected_user = undefined;\n        }\n    });\n    const response_posts = await this.http.get<Li_Response>(base_url + \"search?q=SELECT%20id,%20type,%20author,%20subject,%20body,%20teaser,%20board,%20conversation,%20post_time,%20post_time_friendly,%20replies%20FROM%20messages%20WHERE%20conversation.style='forum'%20AND%20depth=0%20AND%20author.login='\" + this.inputValue + \"'\").toPromise(); \n    if (response_posts.http_code === 200){\n      this.messages_per_user = response_posts.data.items;\n    } else {\n      this.messages_per_user = [];\n      console.error(\"Messages cannot be set!\");\n    }\n    for (var i=0; i<this.messages_per_user.length; i++){\n      this.messages_per_user[i].replies.query = \"<p>Waiting ...</p>\"\n    }\n    this.dataSource = new MatTableDataSource<Message>(this.messages_per_user);\n    for (var i=0; i<this.messages_per_user.length; i++){\n      const response_replies = await this.http.get<Li_Response>(base_url + \"search?q=SELECT%20*%20FROM%20messages%20WHERE%20parent.id='\" + this.messages_per_user[i].id + \"'%20ORDER%20BY%20post_time%20DESC\").toPromise();\n      this.latest_answer = response_replies.data.items;\n      if (this.latest_answer.length > 0){\n        if (this.messages_per_user[i].conversation.solved === true){\n          for (var n=0; n<this.latest_answer.length; n++){\n            if (this.latest_answer[n].is_solution === true){\n              this.messages_per_user[i].replies.query = this.latest_answer[n].body;\n              break;\n            }\n          }\n        } else {\n          this.messages_per_user[i].replies.query = this.latest_answer[0].body;\n        }\n      } else {\n        this.messages_per_user[i].replies.query = \"<p>There is no answer!</p>\";\n      }\n      var img = document.getElementsByTagName(\"img\");\n      for (var j=0; j<img.length; j++){\n        img[j].setAttribute(\"style\", \"width: 100%\");\n      }\n    }\n    this.dataSource = new MatTableDataSource<Message>(this.messages_per_user);\n  }\n\n  keyDown (event:any){\n    if (event.keyCode === 13){\n      this.searchPostsPerUser();\n    }\n  }\n\n  clearUser () {\n    this.inputValue='';\n    this.selected_user = undefined;\n    this.not_found = false;\n  }\n\n  onSubmit() {\n    console.log(\"Submit successful!\");\n    console.log(this.input_search_user);\n  }\n}","    <mat-tab-group dynamicHeight>\n        <mat-tab label=\"All Users\">\n            <form id=\"search_user_form\" (ngSubmit)=\"onSubmit()\" class=\"mat-elevation-z2\"> \n                <input id=\"search_user_input\" type=\"search\" placeholder=\"Search user\" name=\"input_search_user\" [(ngModel)]=\"input_search_user\">\n                <button id=\"button_search_user\">\n                    <mat-icon>search</mat-icon>\n                </button>\n            </form>\n            <div>\n                <mat-card *ngFor=\"let user of users\" class=\"mat-elevation-z2\">\n                    <mat-card-content>\n                        <img class=\"profile_pic\" src={{user.avatar.profile}} alt=\"Profile-Pic\">\n                        <span class=\"user_container\">\n                            <div><a href={{user.view_href}} target=\"_blank\" style=\"text-decoration: none; color: black;\">{{ user.login }}</a></div>\n                            <div>Posts: {{ user.posts }}</div>\n                        </span>\n                        <span *ngIf=\"user.online_status === 'online'\" style=\"background-color: #19ff66;\" class=\"online_status\"></span>\n                        <span *ngIf=\"user.online_status === 'offline'\" style=\"background-color: #bcc2be;\" class=\"online_status\"></span>\n                    </mat-card-content>\n                </mat-card>\n            </div>  \n            <div>\n                <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" [pageIndex]=\"index\" (page)=\"requestUser($event.pageSize, $event.pageIndex)\" class=\"mat-elevation-z2\">\n                </mat-paginator>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Posts per User\">\n            <mat-card style=\"width: 100%; padding: 20px;\" class=\"mat-elevation-z2\">\n                <mat-card-title>Show posts:</mat-card-title>\n                <mat-card-content style=\"margin-top: 30px;\">\n                    <p style=\"display: inline; margin-right: 20px;\">Username:</p>\n                    <mat-form-field (keydown)=\"keyDown($event)\">\n                        <mat-label>Please enter a username:</mat-label>\n                        <input matInput type=\"text\" [(ngModel)]=\"inputValue\">\n                        <button mat-button *ngIf=\"inputValue\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearUser()\">\n                            <mat-icon>close</mat-icon>\n                        </button>\n                        <mat-hint *ngIf=\"not_found\" style=\"color: red;\">No user found!</mat-hint>\n                    </mat-form-field>\n                    <button mat-mini-fab style=\"margin-left: 30px;\" (click)=\"searchPostsPerUser()\">\n                        <mat-icon>search</mat-icon>\n                    </button>\n                </mat-card-content>\n            </mat-card>\n            <mat-card class=\"mat-elevation-z2\" *ngIf=\"selected_user\" style=\"width: 100%;\">\n                <mat-card-title>Result:</mat-card-title>\n                <mat-card-content style=\"width: 100%\">\n                    <div id=\"table-container\">\n                    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\n                         <ng-container matColumnDef=\"subject\">\n                            <th mat-header-cell *matHeaderCellDef>Subject</th>\n                            <td mat-cell *matCellDef=\"let element\">{{ element.subject }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"board\">\n                            <th mat-header-cell *matHeaderCellDef>Board</th>\n                            <td mat-cell *matCellDef=\"let element\">{{ element.board.id }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"posted\">\n                            <th mat-header-cell *matHeaderCellDef>Posted</th>\n                            <td mat-cell *matCellDef=\"let element\">{{ element.post_time_friendly }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"replies\">\n                            <th mat-header-cell *matHeaderCellDef>Replies</th>\n                            <td mat-cell *matCellDef=\"let element\">{{ element.conversation.messages_count - 1 }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"solved\">\n                            <th mat-header-cell *matHeaderCellDef>Solved</th>\n                            <td mat-cell *matCellDef=\"let element\">\n                                <div *ngIf=\"element.conversation.solved\"><mat-icon style=\"color: green;\">done</mat-icon></div>\n                                <div *ngIf=\"element.conversation.solved===false\"><mat-icon>autorenew</mat-icon></div>\n                            </td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"link\">\n                            <th mat-header-cell *matHeaderCellDef>Link</th>\n                            <td mat-cell *matCellDef=\"let element\"><mat-icon><a href={{element.conversation.view_href}} target=\"_blank\" style=\"text-decoration: none;\">open_in_new</a></mat-icon></td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"expandedDetail\">\n                            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\" style=\"max-width: 100%;\">\n                                <div  class=\"expandRow\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                                    <mat-card style=\"max-width: 50%; margin: 20px;\" class=\"mat-elevation-z2\">\n                                        <mat-card-title>Content:</mat-card-title>\n                                        <mat-card-content innerHTML={{element.body}}></mat-card-content>\n                                    </mat-card>\n                                    <mat-card style=\"max-width: 50%; margin-bottom: 20px;\" class=\"mat-elevation-z2\">\n                                        <mat-card-title *ngIf=\"element.conversation.solved===false\">Latest Answer:</mat-card-title>\n                                        <mat-card-title *ngIf=\"element.conversation.solved\">Solution:</mat-card-title>\n                                        <mat-card-content innerHTML=\"{{element.replies.query}}\"></mat-card-content>\n                                    </mat-card>\n                                </div>\n                            </td>\n                        </ng-container>\n\n                         <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                         <tr mat-row *matRowDef=\"let element; columns: displayedColumns;\" class=\"element-row\"  [class.expanded-row]=\"expandedElement === element\" (click)=\"expandedElement = expandedElement === element ? null : element\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n                    </table>\n                </div>\n                </mat-card-content>\n            </mat-card>\n        </mat-tab>\n    </mat-tab-group>  \n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class User {\r\n    type?: string;\r\n    id!: number;\r\n    view_href!: string;\r\n    login!: string;\r\n    online_status!: string;\r\n    avatar!: {\r\n        profile: string;\r\n    };\r\n    posts!: number;\r\n}\r\n\r\nexport class Li_Response {\r\n    data!: {\r\n        items: [],\r\n        list_item_type: string,\r\n        next_cursor: string,\r\n        size: number,\r\n        type: string,\r\n        count: number\r\n    };\r\n    http_code!: number;\r\n    message?: string;\r\n    status!: string;\r\n}\r\n\r\nexport class Message {\r\n    type!: string;\r\n    id!: string;\r\n    view_href!: string;\r\n    author!: {\r\n        login: string, \r\n        id: string,\r\n        view_href: string\r\n    };\r\n    subject!: string;\r\n    body!: string;\r\n    teaser?: string;\r\n    board!: {\r\n        id: string,\r\n        view_href: string\r\n    };\r\n    conversation!: {\r\n        id: string,\r\n        view_href: string,\r\n        messages_count: number,\r\n        solved: boolean\r\n        last_post_time: string,\r\n        last_post_time_friendly: string\r\n    };\r\n    post_time!: string;\r\n    post_time_friendly!: string;\r\n    is_solution!: boolean;\r\n    replies!: {\r\n        query: string\r\n    };\r\n}\r\n\r\nexport class Tag {\r\n    response!: {\r\n        tags: {\r\n            tag:  [{\r\n                attributes: {\r\n                    href: string,\r\n                    mixins: string,\r\n                    type: string\r\n                },\r\n                id: string,\r\n                mixin: {\r\n                    cloud: {\r\n                        weight: string\r\n                    }\r\n                },\r\n                text: string\r\n            }]\r\n        },\r\n        value: string\r\n    };\r\n}\r\n\r\nexport class Tag_Child {\r\n    attributes?: {\r\n        href: string,\r\n        mixins: string,\r\n        type: string\r\n    };\r\n    id!: string;\r\n    mixin!: {\r\n        cloud: {\r\n            weight: string\r\n        }\r\n    };\r\n    text!: string;\r\n}","<mat-tab-group dynamicHeight>\n    <mat-tab label=\"Latest posts\">\n        <mat-card class=\"toolbar mat-elevation-z1 post_card\" *ngFor=\"let message of messages_selected\">\n            <mat-card-title class=\"latest_posts_title\">\n                <div id=\"post_headline\"><a href={{message.view_href}} target=\"_blank\" style=\"text-decoration: none; color: #472C8D;\">{{ message.subject }}</a></div>\n                <div id=\"user\"><a href={{message.author.view_href}} target=\"_blank\" style=\"text-decoration: none; color: #606972;\">{{ message.author.login }}</a></div>\n                <div id=\"date\">\n                    <mat-icon style=\"display: inline; margin-right: 5px; font-size: 15px;\">date_range</mat-icon>\n                    <p style=\"display: inline; font-size: 15px;\">{{ message.post_time_friendly }}</p>\n                </div>\n            </mat-card-title>\n            <mat-card-content class=\"latest_posts_content\" innerHTML=\"{{message.body}}\">\n                \n            </mat-card-content>\n        </mat-card>\n        <div id=\"button_expand\" class=\"button_wrapper\" *ngIf=\"messages_ready\">\n            <button id=\"show_more\" mat-raised-button color=\"accent\" (click)=\"getMessages()\">Show more ...</button>\n        </div>\n    </mat-tab>\n    <mat-tab label=\"Search posts\">\n        <mat-card id=\"search_posts_card\" class=\"mat-elevation-z2\">\n            <mat-card-title>Search posts:</mat-card-title>\n            <mat-card-content id=\"search_posts_content\">\n                <p id=\"form_title\">Post title:</p>\n                <mat-form-field>\n                    <mat-label>Please enter a title:</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"inputValue\">\n                    <button *ngIf=\"inputValue\" mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearTitle()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <mat-hint *ngIf=\"not_found\" style=\"color: red;\">No post found!</mat-hint>\n                </mat-form-field>\n                <button mat-mini-fab style=\"margin-left: 30px;\" (click)=\"searchPost()\">\n                    <mat-icon>search</mat-icon>\n                </button>\n            </mat-card-content>\n        </mat-card>\n    </mat-tab>\n</mat-tab-group>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Li_Response, Message } from '../models/model-interfaces';\n\nconst base_url = \"https://community.khoros.com/api/2.0/\";\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\n\nexport class PostsComponent implements OnInit {\n  messages_selected: Message[] = [];\n  all_messages: Message[] = [];\n  message_size: number = 0;\n  messages_ready: boolean = false;\n\n  inputValue: string = \"\";\n  not_found: boolean = false;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getMessages();\n  }\n\n  async getMessages(){\n    this.messages_ready = false;\n    const message_response = await this.http.get<Li_Response>(base_url + \"search?q=SELECT%20*%20FROM%20messages%20WHERE%20depth=0%20LIMIT%20100\").toPromise();\n    this.all_messages = message_response.data.items;\n    switch(this.message_size) {\n      case 0: {\n        this.message_size = 10;\n        for (var i=0; i<this.message_size; i++){\n          this.messages_selected[i] = this.all_messages[i];\n        }\n        this.messages_ready = true;\n        break;\n      }\n      case 10: {\n        this.message_size = 25;\n        for (var i=10; i<this.message_size; i++){\n          this.messages_selected[i] = this.all_messages[i];\n        }\n        this.messages_ready = true;\n        break;\n      }\n      case 25: {\n        this.message_size = 50;\n        for (var i=25; i<this.message_size; i++){\n          this.messages_selected[i] = this.all_messages[i];\n        }\n        this.messages_ready = true;\n        break;\n      }\n      case 50: {\n        this.message_size = 100;\n        for (var i=50; i<this.message_size; i++){\n          this.messages_selected[i] = this.all_messages[i];\n        }\n        break;\n      }\n    }\n  }\n  \nclearTitle(){\n  this.inputValue = \"\";\n  this.not_found = false;\n}\n\nsearchPost(){\n  if (this.inputValue == \"\") alert(\"Please enter a post title!\");\n}\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ChartOptions, ChartType } from 'chart.js';\nimport { Label, SingleOrMultiDataSet } from 'ng2-charts';\nimport { Li_Response, Tag } from '../models/model-interfaces';\nimport { NgxXml2jsonService } from 'ngx-xml2json';\nimport { plainToClass } from 'class-transformer';\n\nconst base_url: string = \"https://community.khoros.com/api/2.0/\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  response!: Li_Response;\n  doughnutChartLabels: Label[] = [\"Online\", \"Offline\"];\n  doughnutChartData: SingleOrMultiDataSet = [0, 0];\n  doughnutChartType: ChartType = \"doughnut\";\n  doughnutChartColor: any[] = [{ backgroundColor: [\"#19ff66\", \"#bcc2be\"]}];\n  barChartColor: any[] = [ { backgroundColor: [\"#ddcfa6\", \"#a4c4fc\", \"#eaaca6\"]}];\n  barChartLabels: Label[] = [\"Users\", \"Posts\", \"Tags\"];\n  barChartData: SingleOrMultiDataSet = [0, 0, 0];\n  barChartType: ChartType = \"bar\";\n  barChartOptions: ChartOptions = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  online_user!: number;\n  offline_user!: number;\n  all_users: number = 0;\n  tags: string[] = [];\n  tag!: Tag;\n  tag_count!: Tag;\n\n  constructor(private http: HttpClient, private xmlToJsonService: NgxXml2jsonService) { }\n\n  ngOnInit(): void {\n    this.http.get<Li_Response>(base_url + \"search?q=SELECT%20count(*)%20FROM%20users%20WHERE%20online_status='online'\").subscribe(res => {\n      this.response = res;\n      if (this.response.http_code === 200) {\n        this.online_user = this.response.data.count;\n        this.http.get<Li_Response>(base_url + \"search?q=SELECT%20count(*)%20FROM%20users\").subscribe(res => {\n          this.response = res;\n          if (this.response.http_code === 200) {\n            this.all_users = this.response.data.count;\n            this.offline_user = this.all_users - this.online_user;\n            this.doughnutChartData = [this.online_user, this.offline_user];\n          }\n        });\n      } else {\n        alert(\"Online-Status der User kann nicht abgefragt werden!\");\n      }      \n    });\n    this.getTags();\n    this.getBarChartData();\n}\n\ngetTags(){\n  this.http.get(\"https://community.khoros.com/restapi/vc/tagging/tags/all?page_size=1000\", { responseType: \"text\"}).subscribe(res => {\n    const parser = new DOMParser();\n    var xml = parser.parseFromString(res, 'text/xml');\n    var json = this.xmlToJsonService.xmlToJson(xml);\n    this.tag = plainToClass(Tag, json);\n    this.tag.response.tags.tag.sort(function(a,b){\n      var c: number = +a.mixin.cloud.weight;\n      var d: number = +b.mixin.cloud.weight;\n      return d-c;\n    });\n    for (var i=0; i<30; i++){\n      console.log(this.tag.response.tags.tag[i].mixin.cloud.weight);\n      this.tags.push(this.tag.response.tags.tag[i].text);\n    }\n  });\n}\n\nasync getBarChartData(){\n  var user = 0;\n  var posts = 0;\n  var tags = 0;\n\n  const posts_response = await this.http.get<Li_Response>(base_url + \"search?q=SELECT%20count(*)%20FROM%20messages\").toPromise();\n  posts_response.http_code === 200 ? posts = posts_response.data.count : posts = 0;\n\n  const user_response = await this.http.get<Li_Response>(base_url + \"search?q=SELECT%20count(*)%20FROM%20users\").toPromise();\n  user_response.http_code === 200 ? user = user_response.data.count : user = 0;\n  \n  const tag_response = await this.http.get(\"https://community.khoros.com/restapi/vc/tagging/tags/all/count\", {responseType: \"text\"}).toPromise();\n  console.log(tag_response);\n  const parser = new DOMParser();\n  var xml = parser.parseFromString(tag_response, 'text/xml');\n  var json = this.xmlToJsonService.xmlToJson(xml);\n  this.tag_count = plainToClass(Tag, json);\n  tags =+ this.tag_count.response.value;\n\n  this.barChartData = [user, posts, tags];\n}\n}\n","<mat-grid-list cols=\"6\" rowHeight=\"150px\">\n    <mat-grid-tile colspan=\"4\" rowspan=\"3\" class=\"mat-elevation-z2\">\n        <h2 id=\"headlineUsers\">Users:</h2>\n        <div id=\"userChartContainer\">\n            <canvas baseChart [data]=\"doughnutChartData\" [labels]=\"doughnutChartLabels\" [chartType]=\"doughnutChartType\" [colors]=\"doughnutChartColor\"></canvas>\n        </div>\n    </mat-grid-tile>\n    <mat-grid-tile colspan=\"2\" rowspan=\"3\" class=\"mat-elevation-z2\">\n        <h2 id=\"tags\">Most used Tags:</h2>\n        <mat-chip-list>\n            <mat-chip *ngFor=\"let tag of tags\">{{tag}}</mat-chip>\n        </mat-chip-list>\n    </mat-grid-tile>\n    <mat-grid-tile colspan=\"6\" rowspan=\"3\" class=\"mat-elevation-z2\">\n        <h2 id=\"headlineOverview\">Overview:</h2>\n        <div id=\"overviewChartContainer\">\n            <canvas baseChart [data]=\"barChartData\" [labels]=\"barChartLabels\" [chartType]=\"barChartType\" [legend]=\"false\" [options]=\"barChartOptions\" [colors]=\"barChartColor\"></canvas>\n        </div>\n    </mat-grid-tile>\n</mat-grid-list>\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  @ViewChild(\"content\") content!: ElementRef;\n  @ViewChild(\"scrollButton\") scrollButton!: ElementRef;\n\n\n  constructor () {}\n\n  @HostListener('mousewheel', ['$event']) onScroll(e: WheelEvent) {\n    if(this.content?.nativeElement.scrollTop<400){\n      this.scrollButton.nativeElement.style.display = \"none\";\n    } else {\n      this.scrollButton.nativeElement.style.display = \"block\";\n    }\n}\n\ngoToTop(){\n  this.content.nativeElement.scrollTop = 0;\n  this.scrollButton.nativeElement.style.display = \"none\";\n}\n}\n","<mat-sidenav-container>\n  <mat-sidenav #sidenav class=\"sidenav\">\n    <mat-nav-list role=\"navigation\">\n      <a mat-list-item routerLink=\"home\" routerLinkActive=\"active\" (click)=\"sidenav.toggle()\">\n        <mat-icon matListIcon>dashboard</mat-icon>\n        Dashboard\n      </a>\n      <a mat-list-item routerLink=\"user\" routerLinkActive=\"active\" (click)=\"sidenav.toggle()\">\n        <mat-icon matListIcon>person</mat-icon>\n        User\n      </a>\n      <a mat-list-item routerLink=\"posts\" routerLinkActive=\"active\" (click)=\"sidenav.toggle()\">\n        <mat-icon matListIcon>textsms</mat-icon>\n        Posts\n      </a>\n      <a mat-list-item routerLink=\"tags\" routerLinkActive=\"active\" (click)=\"sidenav.toggle()\">\n        <mat-icon matListIcon>tag</mat-icon>\n        Tags\n      </a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"sidenav-content\">\n    <mat-toolbar color=\"primary\" class=\"toolbar mat-elevation-z5\">\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <span class=\"title\"><a routerLink=\"home\" style=\"color: white; text-decoration: none;\">Community Overview</a></span>\n      <div class=\"stretch\"></div>\n      <mat-nav-list role=\"navigation\">\n        <a routerLink=\"home\" class=\"linkIcon\">\n          <mat-icon>dashboard</mat-icon>\n        </a>\n        <a routerLink=\"user\" class=\"linkIcon\">\n          <mat-icon>person</mat-icon>\n        </a>\n        <a routerLink=\"posts\" class=\"linkIcon\">\n          <mat-icon>textsms</mat-icon>\n        </a>\n        <a routerLink=\"tags\" class=\"linkIcon\">\n          <mat-icon>tag</mat-icon>\n        </a>\n    </mat-nav-list>\n    </mat-toolbar>\n\n    <main #content class=\"content\">\n      <router-outlet></router-outlet>\n      <button #scrollButton id=\"scrollButton\" (click)=\"goToTop()\">\n        <mat-icon>keyboard_arrow_up</mat-icon>\n      </button>\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { HostListener, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UserComponent } from './user/user.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule} from '@angular/material/card';\nimport { MatPaginatorModule } from '@angular/material/paginator'\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { TagsComponent } from './tags/tags.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { ChartsModule } from 'ng2-charts';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { NgxScrollTopModule } from 'ngx-scrolltop';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    UserComponent,\n    PostsComponent,\n    TagsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatCardModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatInputModule,\n    MatTableModule,\n    MatGridListModule,\n    ChartsModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n    NgxScrollTopModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule  {\n  constructor (private iconRegistry: MatIconRegistry) {}\n }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { plainToClass } from 'class-transformer';\nimport { NgxXml2jsonService } from 'ngx-xml2json';\nimport { Observable } from 'rxjs';\nimport { Li_Response, Message, Tag, Tag_Child } from '../models/model-interfaces';\nimport { map } from 'rxjs/operators';\n\nconst parser = new DOMParser();\nconst base_url = \"https://community.khoros.com/api/2.0/\"\n\n@Component({\n  selector: 'app-tags',\n  templateUrl: './tags.component.html',\n  styleUrls: ['./tags.component.css']\n})\nexport class TagsComponent implements OnInit {\n  tags: string[] = [];\n  tag_object!: Tag;\n  tags_selected: Tag_Child[] = [];\n  tags_all: Tag_Child[] = [];\n  length: number = 1000;\n  pageSize: number = 100;\n  index: number = 0;\n  pageSizeOptions: number[] = [100, 250, 500, 1000]\n  tag_entries: Message[] = [];\n  dataSource!: MatTableDataSource<Message>;\n  displayedColumns: string[] = [\"subject\", \"author\", \"board\", \"posted\", \"link\"];\n  tagControl = new FormControl();\n  filteredOptions!: Observable<Tag_Child[]>;\n\n  constructor(private http: HttpClient, private xmlToJsonService: NgxXml2jsonService) { }\n\n  ngOnInit(): void {\n    this.getTags();\n    this.filteredOptions = this.tagControl.valueChanges.pipe(map(value => this._filter(value)));\n  }\n\n  //Filter suggested values for tag search\n  private _filter(value: string): Tag_Child[] {\n    const filterValue = value.toLowerCase();\n    return this.tags_all.filter(option => option.text.toLowerCase().includes(filterValue));\n  }\n\n  //Set size of the paginator and get all tags from the community \n  async getTags() {\n    this.tag_object = this.convertXmlToTagObject(await this.http.get(\"https://community.khoros.com/restapi/vc/tagging/tags/all/count\", { responseType: \"text\"}).toPromise());\n    this.length = parseInt(this.tag_object.response.value);\n\n    for (var i=1; i<=Math.ceil(this.length/1000); i++){\n      this.tag_object = this.convertXmlToTagObject(await this.http.get(\"https://community.khoros.com/restapi/vc/tagging/tags/all?page_size=1000&page=\" + i, { responseType: \"text\"}).toPromise());\n      for (var n=0; n<this.tag_object.response.tags.tag.length; n++){\n        this.tags_all.push(this.tag_object.response.tags.tag[n]);\n      }\n    }\n    this.requestTags(this.pageSize, this.index);\n  }\n\n  //Convert XML responses to the corresponding object\n  convertXmlToTagObject(response: any): Tag {\n    var xml = parser.parseFromString(response, \"text/xml\");\n    var json = this.xmlToJsonService.xmlToJson(xml);\n    return plainToClass(Tag, json);\n  }\n\n  //Show all tags for the requested size and page-index of the paginator\n  requestTags(size: number, index: number){\n    this.tags_selected = [];\n    for (var i=index*size; i<(index+1)*size; i++){\n      if (i < this.tags_all.length){\n        this.tags_selected.push(this.tags_all[i]);\n      }\n    }\n  }\n\n  //Add Tags to the tag-array and show the corresponding entries\n  addTag(){\n    this.tags.push(this.tagControl.value);\n    this.tagControl.setValue(\"\");\n    this.showTags();\n  }\n\n  //Show all entries for the selected tags\n  showTags(){\n    var tag: string[] = [...this.tags];\n    for (var i=0; i<tag.length; i++){\n      while (tag[i].indexOf(\" \") > -1){\n        tag[i] = tag[i].replace(\" \", \"%20\");\n      }\n    }\n    var apiUrl: string = \"search?q=SELECT%20*%20FROM%20messages%20WHERE%20tags.text=\";\n    for (var i=0; i<tag.length; i++){\n      apiUrl += (\"'\" + tag[i] + \"'\");\n      if (i !== (tag.length-1)){\n        apiUrl += (\"%20AND%20tags.text=\");\n      }\n    }\n    this.http.get<Li_Response>(base_url + apiUrl).subscribe(res => {\n      this.tag_entries = res.data.items;\n      this.dataSource = new MatTableDataSource<Message>(this.tag_entries);\n    });\n  }\n\n  //remove Tags from the tag list and the tag array\n  removeTag(event: any){\n    event.path[3].remove();\n    var text:string = event.path[3].childNodes[1].data.substring(1);\n    text = text.slice(0, -1);\n    for (var i=0; i<this.tags.length; i++){\n      if (this.tags[i] === text) {\n        var arrayIndex = this.tags.indexOf(text);\n        if (arrayIndex > -1) this.tags.splice(arrayIndex, 1);\n      }\n    }\n    if (this.tags.length > 0){\n      this.showTags();\n    } else {\n      this.tag_entries = [];\n      this.dataSource = new MatTableDataSource(this.tag_entries);\n    }\n  }\n\n  //Execute addTag()-Method on Enter\n  keyDown (event:any){\n    if (event.keyCode === 13){\n      this.addTag();\n    }\n  }\n\n\n\n}\n","<mat-tab-group dynamicHeight>\n    <mat-tab label=\"All tags\">\n        <mat-card>\n            <mat-card-title>All tags available:</mat-card-title>\n            <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" [pageIndex]=\"index\" (page)=\"requestTags($event.pageSize, $event.pageIndex)\"></mat-paginator>\n            <mat-card-content style=\"margin-top: 30px;\">\n                <mat-chip-list>\n                    <mat-chip *ngFor=\"let tag of tags_selected\">{{ tag.text }}&nbsp;{{ tag.mixin.cloud.weight }}</mat-chip>\n                </mat-chip-list>    \n            </mat-card-content>\n        </mat-card>\n    </mat-tab>\n    <mat-tab label=\"Entries per tag(s)\">\n        <mat-card>\n            <mat-card-title>Search for tagged entries:</mat-card-title>\n            <mat-card-content style=\"margin-top: 30px;\">\n                <p style=\"display: inline; margin-right: 20px;\">Enter a tag: </p>\n                <mat-form-field (keydown)=\"keyDown($event)\">\n                    <mat-label>Tag</mat-label>\n                    <input matInput type=\"text\" [matAutocomplete]=\"auto\" [formControl]=\"tagControl\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let tag of filteredOptions | async\" [value]=\"tag.text\">\n                            {{ tag.text }}\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <button mat-mini-fab style=\"margin-left: 30px;\" (click)=\"addTag()\">\n                    <mat-icon>add</mat-icon>\n                </button>\n                <mat-chip-list>\n                    <mat-chip *ngFor=\"let tag of tags\" style=\"padding-right: 2px;\">\n                        {{tag}}\n                        <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"removeTag($event)\">\n                            <mat-icon>close</mat-icon>\n                        </button>\n                    </mat-chip>\n                </mat-chip-list>\n            </mat-card-content>\n        </mat-card>\n        <mat-card *ngIf=\"tags.length > 0\">\n            <mat-card-title>Result:</mat-card-title>\n            <mat-card-content>\n                <div id=\"table-container\">\n                    <table mat-table [dataSource]=\"dataSource\" id=\"tag_table\">\n                        <ng-container matColumnDef=\"subject\">\n                            <th mat-header-cell *matHeaderCellDef>Subject</th>\n                            <td mat-cell *matCellDef=\"let element\">{{ element.subject }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"author\">\n                            <th mat-header-cell *matHeaderCellDef>Author</th>\n                            <td mat-cell *matCellDef=\"let element\">{{ element.author.login }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"board\">\n                            <th mat-header-cell *matHeaderCellDef>Board</th>\n                            <td mat-cell *matCellDef=\"let element\">{{ element.board.id }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"posted\">\n                            <th mat-header-cell *matHeaderCellDef>Posted</th>\n                            <td mat-cell *matCellDef=\"let element\">{{ element.post_time_friendly }}</td>\n                        </ng-container>\n                        <ng-container matColumnDef=\"link\">\n                            <th mat-header-cell *matHeaderCellDef>Link</th>\n                            <td mat-cell *matCellDef=\"let element\"><mat-icon><a href=\"{{element.conversation.view_href}}\" target=\"_blank\" style=\"text-decoration: none;\">open_in_new</a></mat-icon></td>\n                        </ng-container>\n                        \n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                    </table>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </mat-tab>\n</mat-tab-group>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { TagsComponent } from './tags/tags.component';\nimport { UserComponent } from './user/user.component';\n\nconst routes: Routes = [\n  { path: 'home', component:  DashboardComponent },\n  { path: 'posts', component: PostsComponent },\n  { path: 'user', component: UserComponent },\n  { path: 'tags', component: TagsComponent },\n  { path: '', redirectTo: 'home', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}